"""
Django settings for mitopo project.

Generated by 'django-admin startproject' using Django 1.9.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

from __future__ import absolute_import
# ^^^ The above is required if you want to import from the celery
# library.  If you don't have this then `from celery.schedules import`
# becomes `proj.celery.schedules` in Python 2.x since it allows
# for relative imports by default.

# Celery settings

BROKER_URL = 'amqp://guest:guest@rabbitmq:5672'

#: Only add pickle to this list if your broker is secured
#: from unwanted access (see userguide/security.html)
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '5+l8dj6_13ci^9=v-8ugsc9!j1z!tmgn2r5grxd^hhc*gpxa9d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

AUTH_PROFILE_MODULE = 'users.UserProfile'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'djgeojson',
    'leaflet',
    'miroutes',
    'edit_spot',
    'users',
    'reversion',
    #'dbbackup',
    #'djangoratings',
    'star_ratings',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mitopo.urls'



TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',
            ],
        },
    },
]
WSGI_APPLICATION = 'mitopo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
	'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'postgres',
        'USER': 'postgres',
	'PASSWORD': '',
        'HOST': 'postgresql',
        'PORT': 5432,
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

WEB_ROOT = '/code/www/'
MEDIA_ROOT = os.path.join( WEB_ROOT, 'media' )
MEDIA_URL = '/media/'


STATIC_ROOT = os.path.join( WEB_ROOT, 'static' )
STATIC_URL = '/static/'

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder'
)
STATICFILES_DIRS = [
        os.path.join(BASE_DIR, "static"),
]


EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'mitopo.de@gmail.com'
EMAIL_HOST_PASSWORD = '****'
DEFAULT_FROM_EMAIL = 'noreply@mitopo.de'
DEFAULT_TO_EMAIL = 'mitopo.de@gmail.com'


LEAFLET_CONFIG = {
    'RESET_VIEW': False
}

LOGIN_URL="/users/login"

# Paths for database backups
#DBBACKUP_STORAGE = 'django.core.files.storage.FileSystemStorage'
#DBBACKUP_STORAGE_OPTIONS = {'location': os.path.join( WEB_ROOT, 'backups')}

#DBBACKUP_STORAGE = 'storages.backends.ftp.FTPStorage'
#DBBACKUP_STORAGE_OPTIONS = {'location': 'ftp://mitopo_backup:guckiwacki@129.187.164.4:2221' }
#DBBACKUP_TMP_DIR = os.path.join( WEB_ROOT, 'backups')

#DBBACKUP_STORAGE = 'storages.backends.sftpstorage.SFTPStorage'
#DBBACKUP_STORAGE_OPTIONS = {
#        'host': '129.187.164.4',
#        'params': {
#            # 'hostname': '___hostname___',
#            'username': 'mitopo_backup',
#            'password': '__gucki__',
#            'port': 2200,
#            },
#        'known_host_file': os.path.join(BASE_DIR, "mitopo", "known_hosts"),
#        'root_path': '/home/mitopo_backup/backups/',
#        }


# django-star-ratings
STAR_RATINGS_STAR_HEIGHT=12
